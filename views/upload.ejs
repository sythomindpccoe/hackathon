<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="utf-8" />
  <meta name="viewport" content="width=device-width,initial-scale=1" />
  <title>Upload Image - Crowd Count AI</title>
  <link href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&display=swap" rel="stylesheet">
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
  <style>
    * {
      margin: 0;
      padding: 0;
      box-sizing: border-box;
    }
    
    body {
      font-family: 'Inter', sans-serif;
      background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
      min-height: 100vh;
      padding: 20px;
      color: #333;
    }
    
    .glass-container {
      max-width: 1200px;
      margin: 0 auto;
      background: rgba(255, 255, 255, 0.1);
      backdrop-filter: blur(20px);
      border-radius: 24px;
      border: 1px solid rgba(255, 255, 255, 0.2);
      box-shadow: 0 20px 40px rgba(0, 0, 0, 0.1);
      overflow: hidden;
    }
    
    .header {
      background: linear-gradient(135deg, rgba(255, 255, 255, 0.2), rgba(255, 255, 255, 0.1));
      padding: 30px;
      text-align: center;
      border-bottom: 1px solid rgba(255, 255, 255, 0.1);
    }
    
    .logo {
      font-size: 48px;
      margin-bottom: 15px;
      background: linear-gradient(45deg, #ff6b6b, #4ecdc4);
      -webkit-background-clip: text;
      -webkit-text-fill-color: transparent;
      background-clip: text;
    }
    
    .header h1 {
      font-size: 2.5rem;
      font-weight: 700;
      color: white;
      margin-bottom: 10px;
      text-shadow: 0 2px 10px rgba(0, 0, 0, 0.2);
    }
    
    .header p {
      font-size: 1.1rem;
      color: rgba(255, 255, 255, 0.8);
      font-weight: 300;
    }
    
    .nav-pills {
      display: flex;
      justify-content: center;
      gap: 15px;
      margin: 20px 0;
      flex-wrap: wrap;
    }
    
    .nav-pill {
      display: inline-flex;
      align-items: center;
      gap: 8px;
      padding: 12px 24px;
      background: rgba(255, 255, 255, 0.1);
      color: white;
      text-decoration: none;
      border-radius: 50px;
      font-weight: 500;
      transition: all 0.3s ease;
      border: 1px solid rgba(255, 255, 255, 0.2);
    }
    
    .nav-pill:hover {
      background: rgba(255, 255, 255, 0.2);
      transform: translateY(-2px);
      box-shadow: 0 10px 25px rgba(0, 0, 0, 0.1);
    }
    
    .nav-pill.active {
      background: linear-gradient(45deg, #ff6b6b, #4ecdc4);
      border-color: transparent;
    }
    
    .content {
      padding: 40px;
    }
    
    .upload-section {
      margin-bottom: 40px;
    }
    
    .upload-area {
      position: relative;
      border: 3px dashed rgba(255, 255, 255, 0.3);
      border-radius: 20px;
      padding: 60px 40px;
      text-align: center;
      background: rgba(255, 255, 255, 0.05);
      transition: all 0.4s ease;
      cursor: pointer;
      overflow: hidden;
    }
    
    .upload-area::before {
      content: '';
      position: absolute;
      top: -50%;
      left: -50%;
      width: 200%;
      height: 200%;
      background: linear-gradient(45deg, transparent, rgba(255, 255, 255, 0.1), transparent);
      transform: rotate(45deg);
      transition: all 0.6s ease;
      opacity: 0;
    }
    
    .upload-area:hover::before {
      animation: shimmer 1.5s ease infinite;
    }
    
    @keyframes shimmer {
      0% { transform: translateX(-100%) translateY(-100%) rotate(45deg); opacity: 0; }
      50% { opacity: 1; }
      100% { transform: translateX(100%) translateY(100%) rotate(45deg); opacity: 0; }
    }
    
    .upload-area:hover {
      border-color: rgba(255, 255, 255, 0.6);
      background: rgba(255, 255, 255, 0.1);
      transform: scale(1.02);
      box-shadow: 0 20px 40px rgba(0, 0, 0, 0.1);
    }
    
    .upload-area.dragover {
      border-color: #4ecdc4;
      background: rgba(78, 205, 196, 0.1);
      transform: scale(1.05);
    }
    
    .upload-icon {
      font-size: 4rem;
      color: rgba(255, 255, 255, 0.8);
      margin-bottom: 20px;
      transition: all 0.3s ease;
    }
    
    .upload-area:hover .upload-icon {
      transform: scale(1.1);
      color: white;
    }
    
    .upload-text {
      font-size: 1.3rem;
      color: white;
      font-weight: 600;
      margin-bottom: 10px;
    }
    
    .upload-subtext {
      font-size: 0.95rem;
      color: rgba(255, 255, 255, 0.7);
      margin-bottom: 5px;
    }
    
    #imageInput {
      display: none;
    }
    
    .btn-container {
      display: flex;
      justify-content: center;
      gap: 20px;
      margin: 30px 0;
      flex-wrap: wrap;
    }
    
    .btn {
      display: inline-flex;
      align-items: center;
      gap: 10px;
      padding: 15px 30px;
      border: none;
      border-radius: 50px;
      font-size: 1rem;
      font-weight: 600;
      cursor: pointer;
      transition: all 0.3s ease;
      text-decoration: none;
      position: relative;
      overflow: hidden;
    }
    
    .btn-primary {
      background: linear-gradient(45deg, #ff6b6b, #4ecdc4);
      color: white;
      box-shadow: 0 10px 25px rgba(255, 107, 107, 0.3);
    }
    
    .btn-primary:hover {
      transform: translateY(-3px);
      box-shadow: 0 15px 35px rgba(255, 107, 107, 0.4);
    }
    
    .btn-secondary {
      background: rgba(255, 255, 255, 0.1);
      color: white;
      border: 1px solid rgba(255, 255, 255, 0.3);
    }
    
    .btn-secondary:hover {
      background: rgba(255, 255, 255, 0.2);
      transform: translateY(-2px);
    }
    
    .btn:disabled {
      opacity: 0.5;
      cursor: not-allowed;
      transform: none !important;
    }
    
    .loading {
      display: none;
      text-align: center;
      padding: 40px;
      color: white;
    }
    
    .loading-spinner {
      width: 60px;
      height: 60px;
      border: 4px solid rgba(255, 255, 255, 0.2);
      border-top: 4px solid #4ecdc4;
      border-radius: 50%;
      animation: spin 1s linear infinite;
      margin: 0 auto 20px;
    }
    
    @keyframes spin {
      0% { transform: rotate(0deg); }
      100% { transform: rotate(360deg); }
    }
    
    .loading-text {
      font-size: 1.1rem;
      font-weight: 500;
    }
    
    .error {
      background: linear-gradient(45deg, #ff4757, #ff3838);
      color: white;
      padding: 20px;
      border-radius: 15px;
      margin: 20px 0;
      display: none;
      text-align: center;
      box-shadow: 0 10px 25px rgba(255, 71, 87, 0.3);
    }
    
    .results-container {
      margin-top: 40px;
      display: none;
    }
    
    .count-display {
      background: linear-gradient(135deg, #00c851, #00a843);
      color: white;
      padding: 25px;
      border-radius: 20px;
      font-size: 2rem;
      font-weight: 700;
      margin-bottom: 30px;
      text-align: center;
      box-shadow: 0 15px 35px rgba(0, 200, 81, 0.3);
      position: relative;
      overflow: hidden;
    }
    
    .count-display::before {
      content: '';
      position: absolute;
      top: 0;
      left: -100%;
      width: 100%;
      height: 100%;
      background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.2), transparent);
      animation: slideGlow 2s ease infinite;
    }
    
    @keyframes slideGlow {
      0% { left: -100%; }
      100% { left: 100%; }
    }
    
    .result-grid {
      display: grid;
      grid-template-columns: 1fr 1fr;
      gap: 30px;
      margin-top: 30px;
    }
    
    .result-card {
      background: rgba(255, 255, 255, 0.1);
      backdrop-filter: blur(10px);
      border-radius: 20px;
      padding: 25px;
      border: 1px solid rgba(255, 255, 255, 0.2);
      transition: all 0.3s ease;
    }
    
    .result-card:hover {
      transform: translateY(-5px);
      box-shadow: 0 20px 40px rgba(0, 0, 0, 0.1);
    }
    
    .result-card h3 {
      color: white;
      font-size: 1.3rem;
      font-weight: 600;
      margin-bottom: 20px;
      display: flex;
      align-items: center;
      gap: 10px;
    }
    
    .result-card img {
      width: 100%;
      height: auto;
      border-radius: 15px;
      box-shadow: 0 10px 25px rgba(0, 0, 0, 0.2);
      transition: all 0.3s ease;
    }
    
    .result-card img:hover {
      transform: scale(1.02);
    }
    
    .stats-grid {
      display: grid;
      grid-template-columns: repeat(auto-fit, minmax(150px, 1fr));
      gap: 20px;
      margin: 30px 0;
    }
    
    .stat-card {
      background: rgba(255, 255, 255, 0.1);
      backdrop-filter: blur(10px);
      border-radius: 15px;
      padding: 20px;
      text-align: center;
      border: 1px solid rgba(255, 255, 255, 0.2);
    }
    
    .stat-value {
      font-size: 2rem;
      font-weight: 700;
      color: #4ecdc4;
      margin-bottom: 5px;
    }
    
    .stat-label {
      color: rgba(255, 255, 255, 0.8);
      font-size: 0.9rem;
      font-weight: 500;
    }
    
    @media (max-width: 768px) {
      .glass-container {
        margin: 10px;
      }
      
      .header {
        padding: 20px;
      }
      
      .header h1 {
        font-size: 2rem;
      }
      
      .content {
        padding: 20px;
      }
      
      .result-grid {
        grid-template-columns: 1fr;
        gap: 20px;
      }
      
      .upload-area {
        padding: 40px 20px;
      }
      
      .btn-container {
        flex-direction: column;
        align-items: center;
      }
      
      .nav-pills {
        flex-direction: column;
        align-items: center;
      }
    }
    
    .pulse {
      animation: pulse 2s ease infinite;
    }
    
    @keyframes pulse {
      0%, 100% { opacity: 1; }
      50% { opacity: 0.7; }
    }
    
    .fade-in {
      animation: fadeIn 0.6s ease forwards;
    }
    
    @keyframes fadeIn {
      from { opacity: 0; transform: translateY(20px); }
      to { opacity: 1; transform: translateY(0); }
    }
  </style>
</head>
<body>
  <div class="glass-container">
    <div class="header">
      <div class="logo">🤖</div>
      <h1>AI Crowd Counter</h1>
      <p>Advanced computer vision for real-time people detection and counting</p>
      
      <div class="nav-pills">
        <a href="/" class="nav-pill">
          <i class="fas fa-video"></i>
          Live Stream
        </a>
        <a href="/monitor" class="nav-pill">
          <i class="fas fa-chart-line"></i>
          Monitor
        </a>
        <a href="/upload" class="nav-pill active">
          <i class="fas fa-cloud-upload-alt"></i>
          Upload Image
        </a>
        <a href="/video" class="nav-pill">
          <i class="fas fa-film"></i>
          Video Analysis
        </a>
      </div>
    </div>
    
    <div class="content">
      <div class="upload-section">
        <div class="upload-area" onclick="document.getElementById('imageInput').click()">
          <div class="upload-icon">
            <i class="fas fa-cloud-upload-alt"></i>
          </div>
          <div class="upload-text">Drop your image here or click to browse</div>
          <div class="upload-subtext">Supports JPG, PNG, GIF formats</div>
          <div class="upload-subtext">Maximum file size: 12MB</div>
        </div>
        
        <input type="file" id="imageInput" accept="image/*" />
        
        <div class="btn-container">
          <button class="btn btn-primary" id="uploadBtn" disabled>
            <i class="fas fa-brain"></i>
            Analyze with AI
          </button>
          <button class="btn btn-secondary" id="clearBtn" onclick="clearResults()">
            <i class="fas fa-trash"></i>
            Clear
          </button>
        </div>
      </div>
      
      <div class="loading" id="loading">
        <div class="loading-spinner"></div>
        <div class="loading-text">AI is analyzing your image...</div>
        <div style="font-size: 0.9rem; opacity: 0.8; margin-top: 10px;">This may take a few seconds</div>
      </div>
      
      <div class="error" id="error">
        <i class="fas fa-exclamation-triangle"></i>
        <span id="errorText"></span>
      </div>
      
      <div class="results-container fade-in" id="results">
        <div class="count-display" id="countDisplay">
          <i class="fas fa-users"></i>
          <span id="countNumber">0</span> people detected
        </div>
        
        <div class="stats-grid">
          <div class="stat-card">
            <div class="stat-value" id="confidenceValue">95%</div>
            <div class="stat-label">Avg Confidence</div>
          </div>
          <div class="stat-card">
            <div class="stat-value" id="densityValue">Low</div>
            <div class="stat-label">Crowd Density</div>
          </div>
          <div class="stat-card">
            <div class="stat-value" id="processTime">2.3s</div>
            <div class="stat-label">Process Time</div>
          </div>
        </div>
        
        <div class="result-grid">
          <div class="result-card">
            <h3>
              <i class="fas fa-image"></i>
              Original Image
            </h3>
            <img id="originalImage" alt="Original Image" />
          </div>
          
          <div class="result-card">
            <h3>
              <i class="fas fa-crosshairs"></i>
              AI Detection Results
            </h3>
            <img id="annotatedImage" alt="AI Annotated Image" />
          </div>
        </div>
      </div>
    </div>
  </div>

  <script>
    const imageInput = document.getElementById('imageInput');
    const uploadBtn = document.getElementById('uploadBtn');
    const uploadArea = document.querySelector('.upload-area');
    const loading = document.getElementById('loading');
    const error = document.getElementById('error');
    const errorText = document.getElementById('errorText');
    const results = document.getElementById('results');
    const countDisplay = document.getElementById('countDisplay');
    const countNumber = document.getElementById('countNumber');
    const originalImage = document.getElementById('originalImage');
    const annotatedImage = document.getElementById('annotatedImage');
    const confidenceValue = document.getElementById('confidenceValue');
    const densityValue = document.getElementById('densityValue');
    const processTime = document.getElementById('processTime');

    let selectedFile = null;
    let startTime = null;

    // File input change handler
    imageInput.addEventListener('change', function(e) {
      const file = e.target.files[0];
      if (file) {
        handleFileSelect(file);
      }
    });

    // Drag and drop handlers
    uploadArea.addEventListener('dragover', function(e) {
      e.preventDefault();
      uploadArea.classList.add('dragover');
    });

    uploadArea.addEventListener('dragleave', function(e) {
      e.preventDefault();
      uploadArea.classList.remove('dragover');
    });

    uploadArea.addEventListener('drop', function(e) {
      e.preventDefault();
      uploadArea.classList.remove('dragover');
      
      const files = e.dataTransfer.files;
      if (files.length > 0) {
        const file = files[0];
        if (file.type.startsWith('image/')) {
          imageInput.files = files;
          handleFileSelect(file);
        } else {
          showError('Please select a valid image file.');
        }
      }
    });

    function handleFileSelect(file) {
      selectedFile = file;
      uploadBtn.disabled = false;
      uploadBtn.innerHTML = `<i class="fas fa-brain"></i> Analyze "${file.name}"`;
      hideError();
      hideResults();
      
      // Add visual feedback
      uploadArea.style.borderColor = '#4ecdc4';
      uploadArea.style.background = 'rgba(78, 205, 196, 0.1)';
    }

    uploadBtn.addEventListener('click', function() {
      if (!selectedFile) {
        showError('Please select an image first.');
        return;
      }

      startTime = Date.now();
      const formData = new FormData();
      formData.append('image', selectedFile);

      showLoading();
      hideError();
      hideResults();

      fetch('/predict', {
        method: 'POST',
        body: formData
      })
      .then(response => response.json())
      .then(data => {
        hideLoading();
        
        if (data.success) {
          showResults(data);
        } else {
          showError(data.error || 'Failed to analyze image');
        }
      })
      .catch(err => {
        hideLoading();
        showError('Network error: ' + err.message);
      });
    });

    function showResults(data) {
      const endTime = Date.now();
      const duration = ((endTime - startTime) / 1000).toFixed(1);
      
      countNumber.textContent = data.count;
      originalImage.src = data.originalImage;
      
      if (data.annotatedImage) {
        annotatedImage.src = 'data:image/jpeg;base64,' + data.annotatedImage;
      } else {
        annotatedImage.src = data.originalImage;
      }
      
      // Calculate stats
      const predictions = data.predictions || [];
      const avgConfidence = predictions.length > 0 
        ? Math.round(predictions.reduce((sum, pred) => sum + (pred.confidence || 0), 0) / predictions.length * 100)
        : 0;
      
      confidenceValue.textContent = avgConfidence + '%';
      processTime.textContent = duration + 's';
      
      // Determine crowd density
      let density = 'Low';
      if (data.count > 10) density = 'High';
      else if (data.count > 5) density = 'Medium';
      densityValue.textContent = density;
      
      results.style.display = 'block';
      results.classList.add('fade-in');
      
      // Add pulse effect to count
      countDisplay.classList.add('pulse');
      setTimeout(() => countDisplay.classList.remove('pulse'), 2000);
    }

    function showLoading() {
      loading.style.display = 'block';
    }

    function hideLoading() {
      loading.style.display = 'none';
    }

    function showError(message) {
      errorText.textContent = message;
      error.style.display = 'block';
    }

    function hideError() {
      error.style.display = 'none';
    }

    function hideResults() {
      results.style.display = 'none';
      results.classList.remove('fade-in');
    }

    function clearResults() {
      selectedFile = null;
      imageInput.value = '';
      uploadBtn.disabled = true;
      uploadBtn.innerHTML = '<i class="fas fa-brain"></i> Analyze with AI';
      hideError();
      hideResults();
      
      // Reset upload area styling
      uploadArea.style.borderColor = 'rgba(255, 255, 255, 0.3)';
      uploadArea.style.background = 'rgba(255, 255, 255, 0.05)';
    }

    // Add some interactive effects
    document.addEventListener('DOMContentLoaded', function() {
      // Animate elements on load
      document.querySelector('.glass-container').style.opacity = '0';
      document.querySelector('.glass-container').style.transform = 'translateY(30px)';
      
      setTimeout(() => {
        document.querySelector('.glass-container').style.transition = 'all 0.8s ease';
        document.querySelector('.glass-container').style.opacity = '1';
        document.querySelector('.glass-container').style.transform = 'translateY(0)';
      }, 100);
    });
  </script>
</body>
</html>
